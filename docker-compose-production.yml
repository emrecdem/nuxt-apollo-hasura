#  Run in production with
#  $ docker-compose -f docker-compose.yml -f docker-compose-production.yml up -d

version: '3.6'
services:
  app:
    build: ./
    container_name: erd-app
    working_dir: /usr/src/app
    depends_on:
      - postgres
      - hasura
      - upload_server
      - xenonflow
    ports:
      - 3000:3000
    environment:
      NUXT_XENON_API_KEY: '${XENON_API_KEY}'
      NUXT_WEBAPP_PORT: '${WEBAPP_PORT}'
      NUXT_WEBAPP_HOST: '${WEBAPP_HOST}'
      NUXT_WEBAPP_PROTOCOL: '${WEBAPP_PROTOCOL}'

  upload_server:
    build: ./upload-server
    container_name: erd-upload-server
    command: [yarn, start]
    volumes:
      - ${ERD_ETL_PATH}/upload:/usr/src/app/cwl_files
    working_dir: /usr/src/app

  xenonflow:
    image: xenonflow
    container_name: erd-xenonflow
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${ERD_ETL_PATH}:${ERD_ETL_PATH}
      - /Users/peter/repos/esc/data/erd-etl/tmp:/Users/peter/repos/esc/data/erd-etl/tmp
    environment:
      # cwltool will use this path to mount a volume with docker itself, but
      # because we mount the host's docker socket, the container will be a sibling
      # and thus use the path on the host
      # TMPDIR: '${ERD_ETL_PATH}/tmp' # Path on host!
      # TMPDIR: '/app/cwl/tmp'
      TMPDIR: '/Users/peter/repos/esc/data/erd-etl/tmp'
      XENONFLOW_FILES: '${ERD_ETL_PATH}'
